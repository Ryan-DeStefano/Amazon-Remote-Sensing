---
title: "Extracting points using ALOS"
format: html
editor: visual
---

## Peru Extraction

```{r}
alos <- joined %>% 
  filter(year >= 2015)

# Create a vector specifying the number of points to be sampled from each polygon
n_pts_per_polygon <- rep(30, time = nrow(alos))  # Example vector, replace with your desired values

# Initialize the tibble with the appropriate size
test <- tibble(geometry = vector("list", sum(n_pts_per_polygon)),
               sample_id = character(sum(n_pts_per_polygon)))

# Initialize the sample ID counter
sample_counter <- 1

# Loop through each region to sample points
for (i in 1:nrow(alos)) {
  # Sample points from the i-th polygon
  pts <- st_sample(x = alos[i, 12], size = n_pts_per_polygon[i])
  
  # Convert the sampled points to their WKT representation
  point_wkt <- st_as_text(pts)
  
  # Determine the indices to store the sampled points
  start_index <- sample_counter
  end_index <- sample_counter + n_pts_per_polygon[i] - 1
  
  # Store the WKT representation of the sampled point geometries and sample IDs in the test tibble
  test$geometry[start_index:end_index] <- point_wkt
  test$sample_id[start_index:end_index] <- paste0('S_', start_index:end_index)
        
  # Increment the sample ID counter
  sample_counter <- end_index + 1
}

test_sf <- st_as_sf(test, wkt = "geometry", crs=4326)

```

```{r}
# Define start and end dates for the loop
start_year <- 2015
end_year <- 2024
i <- 1

# Iterate over each year
for (year in start_year:end_year) {
  # Iterate over each month within the year
  for (month in 1:12) {
    # Define start and end dates for the current month
    start_date <- paste0(year, "-", sprintf("%02d", month), "-01")
    print(start_date)
    if (month < 12) {
      end_date <- paste0(year, "-", sprintf("%02d", month + 1), "-01")
    } else {
      # If it's December, move to the next year
      end_date <- paste0(year + 1, "-01-01")
    }
    
    # Call the ALOS function for the current month
    task_list <- ALOS(test_sf, start_date = start_date, end_date = end_date, file_prefix = as.character(i))
    
    i = i + 1
    
    # Optionally, you can save or process the task_list here
  }
}

## Stopped it after 2016-01-01 finsihed.
```

## Brazil Extraction

```{r}
alos <- joined %>% 
  filter(year >= 2015)

# Create a vector specifying the number of points to be sampled from each polygon
n_pts_per_polygon <- rep(30, time = nrow(alos))  # Example vector, replace with your desired values

# Initialize the tibble with the appropriate size
test <- tibble(geometry = vector("list", sum(n_pts_per_polygon)),
               sample_id = character(sum(n_pts_per_polygon)))

# Initialize the sample ID counter
sample_counter <- 1

# Loop through each region to sample points
for (i in 1:nrow(alos)) {
  # Sample points from the i-th polygon
  pts <- st_sample(x = alos[i, 23], size = n_pts_per_polygon[i])
  
  # Convert the sampled points to their WKT representation
  point_wkt <- st_as_text(pts)
  
  # Determine the indices to store the sampled points
  start_index <- sample_counter
  end_index <- sample_counter + n_pts_per_polygon[i] - 1
  
  # Store the WKT representation of the sampled point geometries and sample IDs in the test tibble
  test$geometry[start_index:end_index] <- point_wkt
  test$sample_id[start_index:end_index] <- paste0('S_', start_index:end_index)
        
  # Increment the sample ID counter
  sample_counter <- end_index + 1
}

test_sf <- st_as_sf(test, wkt = "geometry", crs=4326)

```

```{r}
# Define start and end dates for the loop
start_year <- 2015
end_year <- 2024
i <- 1

# Iterate over each year
for (year in start_year:end_year) {
  # Iterate over each month within the year
  for (month in 1:12) {
    # Define start and end dates for the current month
    start_date <- paste0(year, "-", sprintf("%02d", month), "-01")
    print(start_date)
    if (month < 12) {
      end_date <- paste0(year, "-", sprintf("%02d", month + 1), "-01")
    } else {
      # If it's December, move to the next year
      end_date <- paste0(year + 1, "-01-01")
    }
    
    # Call the ALOS function for the current month
    task_list <- ALOS(test_sf, start_date = start_date, end_date = end_date, file_prefix = as.character(i))
    
    i = i + 1
    
    # Optionally, you can save or process the task_list here
  }
}

## Stopped it after 2016-01-01 finsihed.
```
